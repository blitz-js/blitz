name: CI

on:
  push:
    branches:
      - master
      - canary
  pull_request:
    branches:
      - master
      - canary

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
            /home/runner/.cache/Cypress
            C:\Users\runneradmin\AppData\Local\Cypress\Cache
          key: ${{ runner.os }}-${{ runner.node_version}}-yarn-v4-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.node_version}}-yarn-v4-
      - name: Install dependencies
        run: yarn install --frozen-lockfile --silent
        env:
          CI: true
      - name: yarn lint
        run: yarn lint
        env:
          CI: true
  build_and_test_pkgs:
    name: Packages Tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node_version: [12, 14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            /home/runner/.cache/Cypress
            C:\Users\runneradmin\AppData\Local\Cypress\Cache
          key: ${{ runner.os }}-${{ runner.node_version}}-yarn-v4-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.node_version}}-yarn-v4-
      - name: Install dependencies
        run: yarn install --frozen-lockfile --silent
        env:
          CI: true
      - name: Setup kernel to increase watchers
        if: matrix.os == 'ubuntu-latest'
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Build packages
        run: yarn build
        env:
          CI: true
      - name: Test Blitz Packages
        run: yarn testonly:packages
        env:
          CI: true
  build_and_test_examples:
    timeout-minutes: 30
    name: Example Apps Tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node_version: [12, 14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            /home/runner/.cache/Cypress
            C:\Users\runneradmin\AppData\Local\Cypress\Cache
          key: ${{ runner.os }}-${{ runner.node_version}}-yarn-v4-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.node_version}}-yarn-v4-
      - name: Install dependencies
        run: yarn install --frozen-lockfile --silent
        env:
          CI: true
      - name: Setup kernel to increase watchers
        if: matrix.os == 'ubuntu-latest'
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Build packages
        run: yarn build
        env:
          CI: true
      - name: Test examples
        run: yarn testonly:examples
        env:
          CI: true
